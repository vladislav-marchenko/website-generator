import { TemplateContextValues } from '@/types/contexts'
import { createContext, FC, ReactNode, useState } from 'react'

const mock = {
  links: {
    tiktok: {
      type: 'link',
      label: 'Tiktok',
      name: 'tiktok',
      placeholder: 'https://www.tiktok.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    instagram: {
      type: 'link',
      label: 'Instagram',
      name: 'instagram',
      placeholder: 'https://www.instagram.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    discord: {
      type: 'link',
      label: 'Discord',
      name: 'discord',
      placeholder: 'https://discord.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    telegram: {
      type: 'link',
      label: 'Telegram',
      name: 'telegram',
      placeholder: 'https://t.me',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    twitter: {
      type: 'link',
      label: 'Twitter',
      name: 'twitter',
      placeholder: 'https://twitter.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    dexscreener: {
      type: 'link',
      label: 'Dexscreener',
      name: 'dexscreener',
      placeholder: 'https://dexscreener.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    pumpfun: {
      type: 'link',
      label: 'Pump.fun',
      name: 'pumpfun',
      placeholder: 'https://pump.fun',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    coingecko: {
      type: 'link',
      label: 'Coin Gecko',
      name: 'coingecko',
      placeholder: 'https://www.coingecko.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    coinmarketcap: {
      type: 'link',
      label: 'Coin Market Cap',
      name: 'coinmarketcap',
      placeholder: 'https://coinmarketcap.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    birdeye: {
      type: 'link',
      label: 'Birdeye',
      name: 'birdeye',
      placeholder: 'https://www.birdeye.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    dextools: {
      type: 'link',
      label: 'Dextools',
      name: 'dextools',
      placeholder: 'https://www.dextools.io',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    whitepaper: {
      type: 'link',
      label: 'Whitepaper',
      name: 'whitepaper',
      placeholder: 'https://example.com/whitepaper',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    authorTelegram: {
      type: 'link',
      label: 'Author Telegram',
      name: 'authorTelegram',
      placeholder: 'https://t.me',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    authorTwitter: {
      type: 'link',
      label: 'Author Twitter',
      name: 'authorTwitter',
      placeholder: 'https://twitter.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    authorDiscord: {
      type: 'link',
      label: 'Author Discord',
      name: 'authorDiscord',
      placeholder: 'https://discord.com',
      url: '',
      iconName: 'tiktok',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    },
    buyNowLink: {
      type: 'link',
      name: 'buyNowLink',
      label: 'Buy Now URL',
      placeholder: 'URL',
      url: '',
      iconName: 'default',
      size: 70,
      rotation: 0,
      animation: null,
      animationDuration: 1000
    }
  },
  logoText: {
    type: 'text',
    name: 'logoText',
    label: 'Project name',
    editor: true,
    value: '',
    fontFamily: 'Inter',
    fontSizeValue: 40,
    sizeUnit: 'px',
    color: '#ffffff',
    styles: [],
    strokeColor: '#ff0000',
    strokeWidth: 0,
    backgroundColor: 'transparent',
    rotation: 0,
    animation: null,
    animationDuration: 1000
  },
  ticker: {
    type: 'text',
    name: 'ticker',
    label: 'Ticker',
    editor: true,
    value: '',
    fontFamily: 'Inter',
    fontSizeValue: 7.5,
    sizeUnit: 'rem',
    color: '#ffffff',
    styles: ['bold'],
    strokeColor: '#ff0000',
    strokeWidth: 0,
    backgroundColor: 'transparent',
    rotation: 0,
    animation: 'heartBeat',
    animationDuration: 1000,
    align: 'center'
  },
  contractAddress: {
    type: 'text',
    name: 'contractAddress',
    label: 'Contract Address',
    editor: true,
    value: '',
    fontFamily: 'Inter',
    fontSizeValue: 24,
    sizeUnit: 'px',
    color: '#000',
    styles: [],
    strokeColor: '#ff0000',
    strokeWidth: 0,
    backgroundColor: 'transparent',
    rotation: 0,
    animation: null,
    animationDuration: 1000
  },
  description: {
    type: 'text',
    name: 'description',
    label: 'Description',
    editor: true,
    value: '',
    fontFamily: 'Inter',
    fontSizeValue: 24,
    sizeUnit: 'px',
    color: '#000',
    styles: [],
    strokeColor: '#ff0000',
    strokeWidth: 0,
    backgroundColor: 'transparent',
    rotation: 0,
    animation: null,
    animationDuration: 1000
  },
  buyNowText: {
    type: 'text',
    name: 'buyNowText',
    label: 'Buy Now',
    editor: true,
    value: 'Buy Now',
    fontFamily: 'Inter',
    fontSizeValue: 24,
    sizeUnit: 'px',
    color: '#000',
    styles: ['bold'],
    strokeColor: '#ff0000',
    strokeWidth: 0,
    backgroundColor: 'transparent',
    rotation: 0,
    animation: null,
    animationDuration: 1000,
    align: 'center'
  },
  logoImage: {
    type: 'image',
    name: 'logoImage',
    label: 'Logo',
    placeholder: 'URL',
    editor: true,
    src: '',
    slideshowItems: [],
    width: 90,
    height: 90,
    sizeUnit: 'px',
    rotation: 0,
    opacity: 100,
    borderColor: '#ff0000',
    borderWidth: 0,
    slideshowInterval: 2000,
    animation: null,
    animationDuration: 1000
  },
  background: {
    type: 'image',
    name: 'background',
    label: 'Background',
    placeholder: 'URL',
    editor: true,
    src: 'https://media.assettype.com/outlookindia/2024-04/819e7205-4a83-4447-9b76-cd38384e10f8/2.png?w=801&auto=format%2Ccompress&fit=max&format=webp&dpr=1.0',
    slideshowItems: [],
    width: 100,
    height: 100,
    sizeUnit: '%',
    rotation: 0,
    opacity: 100,
    borderColor: '#ff0000',
    borderWidth: 0,
    slideshowInterval: 2000,
    animation: null,
    animationDuration: 1000
  },
  preview: {
    type: 'image',
    name: 'preview',
    label: 'Image Preview',
    placeholder: 'URL',
    editor: true,
    src: '',
    slideshowItems: [],
    width: 340,
    height: 'auto',
    sizeUnit: 'px',
    rotation: 0,
    opacity: 100,
    borderColor: '#ff0000',
    borderWidth: 0,
    slideshowInterval: 2000,
    animation: null,
    animationDuration: 1000
  },
  showHowToBuy: {
    type: 'toggle',
    name: 'showHowToBuy',
    label: 'Show',
    value: true
  },
  firstStep: {
    type: 'text',
    name: 'firstStep',
    label: 'Step 1',
    editor: true,
    value:
      'Mobile Users: Download the Phantom app for free. Desktop Users: Download the Phantom chrome extension.',
    fontFamily: 'Inter',
    fontSizeValue: 20,
    sizeUnit: 'px',
    color: '#000',
    styles: [],
    strokeColor: '#ff0000',
    strokeWidth: 0,
    backgroundColor: 'transparent',
    rotation: 0,
    animation: null,
    animationDuration: 1000,
    align: 'center'
  },
  firstStepImage: {
    type: 'image',
    name: 'firstStepImage',
    label: 'Step 1 Image',
    editor: true,
    src: 'https://firebasestorage.googleapis.com/v0/b/webby-2376c.firebasestorage.app/o/images%2Fphantomlogo.jpeg?alt=media&token=1bc88ed9-0e45-4cf9-9174-e3a72e276c49',
    slideshowItems: [],
    width: 64,
    height: 64,
    sizeUnit: 'px',
    rotation: 0,
    opacity: 100,
    borderColor: '#ff0000',
    borderWidth: 0,
    slideshowInterval: 2000,
    animation: null,
    animationDuration: 1000
  },
  secondStep: {
    type: 'text',
    name: 'secondStep',
    label: 'Step 2',
    editor: true,
    value:
      'Fund your wallet with Solana, you can buy Solana from an exchange or cross chain swap and send it to your wallet.',
    fontFamily: 'Inter',
    fontSizeValue: 20,
    sizeUnit: 'px',
    color: '#000',
    styles: [],
    strokeColor: '#ff0000',
    strokeWidth: 0,
    backgroundColor: 'transparent',
    rotation: 0,
    animation: null,
    animationDuration: 1000,
    align: 'center'
  },
  secondStepImage: {
    type: 'image',
    name: 'secondStepImage',
    label: 'Step 2 Image',
    editor: true,
    src: 'https://firebasestorage.googleapis.com/v0/b/webby-2376c.firebasestorage.app/o/images%2Fsolicon.jpeg?alt=media&token=341437f5-35d6-41c0-b777-8c99435bdbbf',
    slideshowItems: [],
    width: 64,
    height: 64,
    sizeUnit: 'px',
    rotation: 0,
    opacity: 100,
    borderColor: '#ff0000',
    borderWidth: 0,
    slideshowInterval: 2000,
    animation: null,
    animationDuration: 1000
  },
  thirdStep: {
    type: 'text',
    name: 'thirdStep',
    label: 'Step 3',
    editor: true,
    value: 'Go to Raydium or Jupiter and swap your Solana for $Ticker.',
    fontFamily: 'Inter',
    fontSizeValue: 20,
    sizeUnit: 'px',
    color: '#000',
    styles: [],
    strokeColor: '#ff0000',
    strokeWidth: 0,
    backgroundColor: 'transparent',
    rotation: 0,
    animation: null,
    animationDuration: 1000,
    align: 'center'
  },
  thirdStepImage: {
    type: 'image',
    name: 'thirdStepImage',
    label: 'Step 3 Image',
    editor: true,
    src: 'https://firebasestorage.googleapis.com/v0/b/webby-2376c.firebasestorage.app/o/images%2Fjuplogo.jpeg?alt=media&token=1e7e9715-b502-4ad2-9aa0-3e60c597c05b',
    slideshowItems: [],
    width: 64,
    height: 64,
    sizeUnit: 'px',
    rotation: 0,
    opacity: 100,
    borderColor: '#ff0000',
    borderWidth: 0,
    slideshowInterval: 2000,
    animation: null,
    animationDuration: 1000
  }
}

export const TemplateContext = createContext<TemplateContextValues | null>(null)

export const TemplateContextProvider: FC<{ children: ReactNode }> = ({
  children
}) => {
  const [data, setData] = useState(mock)

  console.log(data)

  const value = {
    data,
    setData,
    updateField: null,
    selectedTemplate: 'classic'
  }

  console.log('!', value)

  return (
    <TemplateContext.Provider value={value}>
      {children}
    </TemplateContext.Provider>
  )
}
